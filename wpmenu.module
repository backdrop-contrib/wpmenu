<?php

/**
 * @file
 * WordPress wpmenu clone.
 */

use \Drupal\Core\Render\Element;
use \Drupal\Core\Url;
use \Drupal\search\Plugin\Block;

use Symfony\Component\Yaml\Yaml;

/**
 * Implements hook_theme().
 */
function wpmenu_theme($existing, $type, $theme, $path) {
  $items['wpmenu_top'] = array(
    'render element' => 'element',
  );
  $items['menu__wpmenu_top'] = array(
    'base hook' => 'menu',
    'variables' => array('items' => array(), 'attributes' => array()),
  );
  $items['wpmenu_left'] = array(
    'render element' => 'element',
  );
  $items['menu__wpmenu_left'] = array(
    'base hook' => 'menu',
    'variables' => array('items' => array(), 'attributes' => array()),
  );

  return $items;
}

/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 *
 * Adds necessary classes to the body and html tags
 */
function wpmenu_preprocess_html(&$variables) {
  $account = \Drupal::currentUser();
  $is_admin = \Drupal::service('router.admin_context')->isAdminRoute();
  if ($account->id() > 0) {
    if ($is_admin) {
      $variables['attributes']['class'][] = 'wp-admin';
    }
    $variables['attributes']['class'][] = 'wp-core-ui no-js index-php auto-fold admin-bar branch-4-2 veriten-4-2-4 admin-color-fresh locale-en-us no-customize-support no-svg';
    $variables['html_attributes']->addClass('wp-toolbar');
  }
}

/**
 * Implements hook_page_top().
 *
 * Add wpmenu to the top of the page automatically.
 */
function wpmenu_page_top(array &$page_top) {
  $account = \Drupal::currentUser();
  $is_admin = \Drupal::service('router.admin_context')->isAdminRoute();
  if ($account->id() > 0) {
    $page_top['00wpmenu_wpwrap_top']['#markup'] = '<div id="wpwrap">';
    if ($is_admin) {
      $page_top['wpmenu_left'] = ['#theme' => 'wpmenu_left', '#description' => 'left menu',];
      $page_top['00wpmenu_wpcontent']['#markup'] = '<div id="wpcontent" class="layout-container">';
    }
    $page_top['wpmenu_top'] = ['#theme' => 'wpmenu_top', '#description' => 'top menu', '#attached' => array('library' => array('wpmenu/wpmenu'),),];
  }
}

/**
 * Implements hook_page_top().
 *
 * Add wpmenu to the top of the page automatically.
 */
function wpmenu_page_bottom(array &$page_bottom) {
  $account = \Drupal::currentUser();
  $is_admin = \Drupal::service('router.admin_context')->isAdminRoute();
  if ($account->id() > 0) {
    if ($is_admin) {
      $page_bottom['00wpmenu_wpwrap_close']['#markup'] = "</div>";
    }
    $page_bottom['00wpmenu_wpcontent_close']['#markup'] = "</div>";
  }
}
/**
 * Prepares variables for administration toolbar templates.
 *
 * Default template: wpmenu-top.html.twig.
 *
 * @param array $variables
 *   An associative array containing some basic variables for the twig template
 */
function template_preprocess_wpmenu_top(&$variables) {
  global $base_path;
  $site_name = \Drupal::configFactory()->getEditable('system.site')->get('name');
  $is_admin = \Drupal::service('router.admin_context')->isAdminRoute();
  $current_path = \Drupal::service('path.current')->getPath();
  $types = \Drupal\node\Entity\NodeType::loadMultiple();
  $content_types = array_keys($types);

  // Adds core search form with correct styling
  if (\Drupal::moduleHandler()->moduleExists('search')) {
    $search_form = Block\SearchBlock::build();
    $search_form['#attributes']['id'][] = 'adminbarsearch';
    $search_form['keys']['#attributes']['class'][] = 'adminbar-input';
    unset($search_form['actions']['submit']);
    $variables['form'] = drupal_render($search_form);
  }
  else{
    $variables['form'] = '';
  }
  // End search form

  $variables['is_admin'] = $is_admin;
  $variables['base_path'] = $base_path;
  $variables['site_name'] = $site_name;
  $variables['module_path'] = drupal_get_path('module', 'wpmenu');
  $variables['current_path'] = $current_path;
  $variables['content_types'] = $content_types;
  $variables['username'] = $variables['user']->getAccount()->name;
  $variables['uid'] = $variables['user']->getAccount()->id();
  $variables['gravatar'] = 'https://www.gravatar.com/avatar/' . strtolower(trim(md5($variables['user']->getEmail())));
}

/**
 * Prepares variables for administration toolbar templates.
 *
 * Default template: wpmenu-left.html.twig.
 *
 * @param array $variables
 *   An associative array containing:
 *   - menu: An array containing the properties and children of
 *     the menu. Properties used: separator, path, text, icon, children.
 */
function template_preprocess_wpmenu_left(&$variables) {
  global $base_path;
//    $assembler = new UnroutedUrlAssembler();
  $current_path = \Drupal::service('path.current')->getPath();
  $module_path = drupal_get_path('module', 'wpmenu');
  $config = Yaml::parse(file_get_contents($module_path . '/wpmenu-left.yml'));

  $index = 0;
  $cindex = 0;
  $menu = [];

  foreach ($config['menu'] as $menu_item) {
    foreach ($menu_item as $key => $value) {
      if ($key == 'separator') {
        $index++;
        $cindex = 0;
      }
      if ($key == 'children') {
        foreach ($value as $child) {
          foreach ($child as $ckey => $cvalue) {
            if ($ckey == 'url') {
              $url = Url::fromUserInput($base_path . $cvalue);

              if ($url->isRouted()) {
                $generator = Drupal::urlGenerator();
                $path = $generator->generate($url->getRouteName());
              }
              $cvalue = $path;
            }
            $menu[$index]['children'][$cindex][$ckey] = $cvalue;
          }
          $cindex++;
        }
      } else {
        if ($key == 'url') {
          $url = Url::fromUserInput($base_path . $value);

          if ($url->isRouted()) {
            $generator = Drupal::urlGenerator();
            $path = $generator->generate($url->getRouteName());
          }
          $value = $path;
        }
        $menu[$index][$key] = $value;
      }
    }
  }

  $variables['base_path'] = $base_path;
  $variables['current_path'] = $current_path;
  $variables['uid'] = $variables['user']->getAccount()->id();
  $variables['menu'] = $menu;
}
